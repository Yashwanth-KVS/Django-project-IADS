# Generated by Django 5.0.1 on 2024-07-21 01:32

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_id",
                    models.AutoField(primary_key=True, serialize=False, unique=True),
                ),
                ("email_id", models.EmailField(max_length=254, unique=True)),
                ("dob", models.DateField(default=datetime.date.today)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                (
                    "cover_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="cover_pictures"
                    ),
                ),
                ("interests", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Members",
            },
            bases=("auth.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Followers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "followee_id",
                    models.ManyToManyField(
                        blank=True, related_name="following", to="myapp.member"
                    ),
                ),
                (
                    "follower_id",
                    models.ManyToManyField(
                        blank=True, related_name="followers", to="myapp.member"
                    ),
                ),
                (
                    "requests",
                    models.ManyToManyField(
                        blank=True, related_name="requests_received", to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Followers",
            },
        ),
        migrations.CreateModel(
            name="Feeds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Feeds",
            },
        ),
        migrations.CreateModel(
            name="Pages",
            fields=[
                ("page_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.TextField()),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "feed",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pages",
                        to="myapp.feeds",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Pages",
            },
        ),
        migrations.CreateModel(
            name="PagesComments",
            fields=[
                (
                    "page_comment_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("comment", models.TextField()),
                ("upvote", models.IntegerField(default=0)),
                ("downvote", models.IntegerField(default=0)),
                (
                    "page_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.pages"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Pages_comments",
            },
        ),
        migrations.CreateModel(
            name="PagesFollowers",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "follower_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
                (
                    "page_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.pages"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Pages_followers",
            },
        ),
        migrations.CreateModel(
            name="Posts",
            fields=[
                ("post_id", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="post_images"),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="myapp.feeds",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Posts",
            },
        ),
        migrations.CreateModel(
            name="PostLikes",
            fields=[
                ("like_id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "feed",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.feeds",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
                (
                    "post_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="myapp.posts",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "PostLikes",
            },
        ),
        migrations.CreateModel(
            name="PostComments",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
                (
                    "post_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="myapp.posts",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "PostComments",
            },
        ),
        migrations.CreateModel(
            name="Threads",
            fields=[
                ("thread_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "category",
                    models.IntegerField(
                        choices=[(1, "Open"), (2, "Closed")], default=1
                    ),
                ),
                ("query", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.feeds"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Threads",
            },
        ),
        migrations.CreateModel(
            name="ThreadComments",
            fields=[
                (
                    "thread_comment_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("comment", models.TextField()),
                ("upvote", models.IntegerField(default=0)),
                ("downvote", models.IntegerField(default=0)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
                (
                    "thread_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.threads"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "ThreadComments",
            },
        ),
        migrations.CreateModel(
            name="Favorites",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.member"
                    ),
                ),
                (
                    "thread_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.threads"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Favourites",
            },
        ),
    ]
